# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

variables:
  - group: artifactory_service_account
  - name: ci_type
    value: $(Build.Reason)
  - name: product_scene
    value: CP


pool:
  name: default

resources:
  containers:
    - container: cmake_with_cuda_torch_ros3
      endpoint: artifactory
      image: artifactory.momenta.works/docker-momenta/build_env_devcar_momenta_cmake_with_cuda_torch_ros3:v0.0.2

#schedules:
#- cron: "00 16 * * *"
#  displayName: timing triger
#  branches:
#    include:
#    - cpp/main_ddp



jobs:
  - job: check_simulation_function
    workspace:
      clean:
        all
    timeoutInMinutes: 180
    pool:
      name: 'default'
    steps:
      - checkout: self
        fetchDepth: 1
        clean: true
        lfs: false
        submodules: recursive
        persistCredentials: true
      - bash: |
          bash .ci/$(Agent.JobName).sh
        displayName: $(Agent.JobName)
        env:
          offboard_branch: $(offboard_branch)
          user_name: $(Build.RequestedForEmail)
          ci_type: $(Build.Reason)
          Onboard_commit: $(Onboard_commit)
          pr_id: $(System.PullRequest.PullRequestId)
          build_directory: $(Build.Repository.LocalPath)
          pr_email: $(Build.RequestedForEmail)
          ci_tag: $(ci_type)_$(product_scene)_$(Build.BuildId)_$(Build.BuildNumber)_$(System.PullRequest.PullRequestId)_$(Build.Repository.Name)
          build_number: $(Build.BuildNumber)
          build_id: $(Build.BuildId)

      - task: PostBuildCleanup@3
        displayName: 'Clean Agent Directories'
        condition: always()

